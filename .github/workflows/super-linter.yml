# This workflow executes comprehensive linting on changed files using the configured linting infrastructure
# from PR #43. It validates code quality across multiple languages and formats.
#
# Configured linters include:
# - EDITORCONFIG (file formatting consistency)
# - SHELLCHECK (bash/shell script analysis)
# - YAML (YAML syntax and style)
# - JSON (JSON syntax validation)
# - MARKDOWN (Markdown formatting via markdownlint)
# - JSCPD (duplicate code detection)
# - GITLEAKS (secret detection)
#
# For more information, see:
# https://github.com/github/super-linter
name: Lint Code Base

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
permissions:
  contents: read
  statuses: write      # Allow updating commit statuses
  pull-requests: write # Allow PR comments
jobs:
  run-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0

      - name: Lint Code Base
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: "master"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Only enable the linters we need (Super Linter v4 doesn't support mixed true/false)
          VALIDATE_EDITORCONFIG: true
          VALIDATE_BASH: true
          VALIDATE_YAML: true
          VALIDATE_JSON: true
          VALIDATE_MARKDOWN: true
          VALIDATE_JSCPD: true
          VALIDATE_GITLEAKS: true
