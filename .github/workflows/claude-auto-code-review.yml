---
name: Claude PR Auto Review with Progress Tracking

on:
  pull_request:
    types: [opened, synchronize, ready_for_review, reopened]

jobs:
  auto-review:
    if: |
      (github.event_name == 'pull_request' &&
        !contains(github.event.pull_request.title, '[skip-review]') &&
        !contains(github.event.pull_request.title, '[WIP]'))
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: write
      pull-requests: write
      issues: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0 # Full history for better diff analysis

      - name: PR Review with Progress Tracking
        id: claude-review
        uses: anthropics/claude-code-action@v1
        env:
          NPM_CONFIG_MAXSOCKETS: "15"
          NPM_CONFIG_NETWORK_CONCURRENCY: "1"
          # increase from default 25000 to allow reading PR files from MCP (otherwise reads them using gh command anyway)
          MAX_MCP_OUTPUT_TOKENS: "100000"
        with:
          additional_permissions: |
            actions: read

          # github_token not needed - uses default GITHUB_TOKEN for GitHub operations
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # âœ¨ Enables tracking comments like in v0.x
          track_progress: true
          # When track_progress is enabled:
          # - Creates a tracking comment with progress checkboxes
          # - Includes all PR context (comments, attachments, images)
          # - Updates progress as the review proceeds
          # - Marks as completed when done

          # Use just one comment to deliver PR comments (only applies for pull_request event workflows)
          use_sticky_comment: true

          # Enable commit signing using GitHub's commit signature verification. When false, Claude uses standard git commands
          # use_commit_signing: true

          allowed_bots: "dependabot,claude"

          # --disallowedTools WebSearch,WebFetch
          # --model claude-opus-4-1-20250805

          claude_args: |
            --max-turns 15
            --system-prompt "You are a senior engineer focused on code quality and security.
              Before your review you must read CLAUDE.md and validate PR changes against project instructions.
              You question every change in the PR. You look for a reason, justification and value behind every change and every feature
              and strive to reduce unnecessary increase of complexity and unnecessary features.
              You guard against deviations from project goals and use cases and against instructions.
              You also focus on identifying problematic spots, unhandled cases, and suggesting improvements."
            --allowedTools "WebSearch,WebFetch,Task,Bash,Glob,Grep,LS,ExitPlanMode,Read,Edit,
              MultiEdit,Write,NotebookEdit,TodoWrite,BashOutput,KillBash,
              Bash(gh pr comment:*),Bash(gh pr diff:*),Bash(gh pr view:*),Bash(gh pr review:*),
              mcp__github,
              mcp__github_inline_comment,
              mcp__github_comment,
              mcp__github_ci,
              mcp__github_inline_comment__create_inline_comment,
              mcp__github_inline_comment__create_inline_comment,
              mcp__github_ci__get_ci_status,
              mcp__github_ci__get_workflow_run_details,
              mcp__github_ci__download_job_log,
              mcp__github_comment__update_claude_comment,
              mcp__github__add_comment_to_pending_review,
              mcp__github__create_and_submit_pull_request_review,
              mcp__github__create_issue,
              mcp__github__create_or_update_file,
              mcp__github__create_pending_pull_request_review,
              mcp__github__delete_pending_pull_request_review,
              mcp__github__download_workflow_run_artifact,
              mcp__github__get_code_scanning_alert,
              mcp__github__get_commit,
              mcp__github__get_dependabot_alert,
              mcp__github__get_file_contents,
              mcp__github__get_job_logs,mcp__github__get_me,
              mcp__github__get_pull_request,
              mcp__github__get_pull_request_comments,
              mcp__github__get_pull_request_diff,
              mcp__github__get_pull_request_files,
              mcp__github__get_pull_request_reviews,
              mcp__github__get_pull_request_status,
              mcp__github__get_secret_scanning_alert,
              mcp__github__get_workflow_run,
              mcp__github__get_workflow_run_logs,
              mcp__github__list_branches,
              mcp__github__list_code_scanning_alerts,
              mcp__github__list_commits,
              mcp__github__list_dependabot_alerts,
              mcp__github__list_pull_requests,
              mcp__github__list_secret_scanning_alerts,
              mcp__github__list_workflow_jobs,
              mcp__github__list_workflow_run_artifacts,
              mcp__github__list_workflow_runs,
              mcp__github__list_workflows,
              mcp__github__merge_pull_request,
              mcp__github__push_files,
              mcp__github__rerun_failed_jobs,
              mcp__github__rerun_workflow_run,
              mcp__github__run_workflow,
              mcp__github__search_code,
              mcp__github__search_pull_requests,
              mcp__github__submit_pending_pull_request_review,
              mcp__github__update_pull_request,
              mcp__github__update_pull_request_branch,
              mcp__github__get_issue,
              mcp__github__add_issue_comment,
              mcp__github__get_issue_comments,
              ListMcpResourcesTool,
              ReadMcpResourceTool"

          # Disabled: creates a mess to review. Inline suggestions are often broken
          # Use GitHub's suggestion format when proposing code changes.
          # Use inline comments to highlight specific areas of concern.

          # Never read all PR comments at once. Always use pagination and filters.
          # If whole PR diff is too large, instead of getting whole diff list changes in PR and review changes one by one.

          # `gh pr comment ${{ github.event.pull_request.number }} --delete-last --yes`

          prompt: "/auto-review ${{ github.event.pull_request.number }}"

          # # from: https://github.com/anthropics/claude-code-action/blob/main/docs/solutions.md
          # Use `gh pr comment` for top-level feedback.
          # Use `mcp__github_inline_comment__create_inline_comment` to highlight specific code issues.

          # Removed from prompt:
          # Your review result must be in PR as single sticky comment or as your approve message or as message requesting changes but not both.
          # If PR was already reviewed by claude previously, validate latest changes made since your previous review against previous review result first.
          # Make full PR review only if either no previous review of this PR by claude found, or if you validated that latest changes pushed to the PR have fixed all issues (of medium priority or higher) found in previous claude review in this PR.
