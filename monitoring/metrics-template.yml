# OracleInstanceCreator Performance Monitoring Template
# Compatible with Grafana, DataDog, CloudWatch, and other monitoring systems

metadata:
  name: "OracleInstanceCreator Parallel Execution Monitoring"
  version: "1.0"
  description: "Performance monitoring and alerting for Oracle Cloud free tier automation"
  tags: ["oracle-cloud", "free-tier", "automation", "performance"]

# Key Performance Indicators
kpis:
  execution_time:
    metric: "PERF_METRIC.*parallel_execution"
    threshold: 25  # seconds (target: 17-25s)
    alert_condition: "> 30"
    severity: "warning"
    description: "Total parallel execution time"
    
  success_rate:
    metric: "instance_creation_success_rate"
    threshold: 20  # percent minimum expected
    alert_condition: "< 10"
    severity: "critical"
    description: "Overall instance creation success rate"
    
  api_latency:
    metric: "PERF_METRIC.*API_RESPONSE_TIME"
    threshold: 3000  # milliseconds
    alert_condition: "> 5000"
    severity: "warning"
    description: "OCI API response latency"

# Structured Log Queries
log_queries:
  performance_metrics:
    pattern: "PERF_METRIC\\|(.*)\\|(.*)\\|(.*)\\|(.*)"
    fields:
      timestamp: "$1"
      metric_type: "$2" 
      value: "$3"
      details: "$4"
    index: "github-actions-logs"
    
  error_classification:
    pattern: "Detected (\\w+) error pattern"
    fields:
      error_type: "$1"
    aggregation: "count"
    group_by: "error_type"
    
  capacity_trends:
    pattern: "CAPACITY.*error.*"
    time_window: "1h"
    aggregation: "rate"
    description: "Track capacity error frequency patterns"

# Dashboard Panels
dashboard:
  panels:
    - title: "Execution Time Trends"
      type: "time_series"
      query: "PERF_METRIC.*EXECUTION_PHASE"
      y_axis: "Seconds"
      alert_line: 30
      
    - title: "Success Rate by Availability Domain"
      type: "bar_chart"
      query: 'record_ad_result.*success|record_ad_result.*failure'
      group_by: "availability_domain"
      calculation: "success_rate_percentage"
      
    - title: "Error Distribution"
      type: "pie_chart"
      query: "error_type:(CAPACITY|RATE_LIMIT|AUTH|NETWORK|CONFIG)"
      group_by: "error_type"
      
    - title: "API Response Times"
      type: "histogram"
      query: "PERF_METRIC.*API_RESPONSE_TIME"
      buckets: [0, 1000, 2000, 5000, 10000]
      unit: "milliseconds"
      
    - title: "Peak Usage Patterns"
      type: "heatmap"
      query: "instance_creation_attempt"
      x_axis: "hour_of_day"
      y_axis: "day_of_week"
      value: "attempt_count"

# Alerting Rules
alerts:
  critical:
    - name: "Complete Execution Failure"
      condition: "no instance_creation_success in 6h"
      message: "No successful instance creations in 6 hours - check authentication and configuration"
      actions: ["email", "slack"]
      
    - name: "Authentication Failure"
      condition: "error_type:AUTH count > 3 in 1h"
      message: "Multiple authentication failures detected - check API keys"
      actions: ["email", "pagerduty"]
      
  warning:
    - name: "High Execution Time"
      condition: "parallel_execution_time > 30s for 3 consecutive runs"
      message: "Parallel execution consistently slow - investigate performance"
      actions: ["slack"]
      
    - name: "Low Success Rate"
      condition: "success_rate < 20% in 24h"
      message: "Instance creation success rate below 20% - capacity may be limited"
      actions: ["email"]
      
    - name: "API Latency Spike"
      condition: "avg(api_response_time) > 5000ms in 15m"
      message: "OCI API responding slowly - check service status"
      actions: ["slack"]

# Capacity Planning
capacity_analysis:
  peak_hours:
    query: "CAPACITY.*error"
    group_by: "hour_of_day"
    timezone: "America/Los_Angeles"  # Oracle's primary timezone
    description: "Identify peak capacity constraint hours"
    
  ad_performance:
    query: "record_ad_result"
    group_by: ["availability_domain", "hour_of_day"]
    metrics: ["success_rate", "avg_response_time"]
    description: "AD performance patterns for optimization"
    
  success_predictors:
    variables: ["time_of_day", "day_of_week", "previous_attempts"]
    target: "instance_creation_success"
    model: "logistic_regression"
    description: "Predict optimal execution times"

# Integration Examples
integrations:
  grafana:
    datasource: "loki"  # For log-based metrics
    dashboard_json: "grafana-dashboard.json"
    
  datadog:
    log_pipeline: "github-actions"
    custom_metrics: true
    dashboard_id: "oracle-free-tier"
    
  cloudwatch:
    log_group: "/github-actions/oracle-instance-creator"
    custom_namespace: "OracleAutomation"
    
  prometheus:
    metrics_endpoint: "/metrics"
    scrape_interval: "30s"

# Sample Queries by Platform
sample_queries:
  grafana_loki:
    execution_time: '{job="github-actions"} |= "PERF_METRIC" |= "parallel_execution" | regexp "PERF_METRIC\\|.*\\|.*\\|(?P<time>\\d+)\\|.*"'
    success_rate: 'rate(({job="github-actions"} |= "Instance created successfully")[1h])'
    
  datadog:
    execution_time: 'source:github-actions "PERF_METRIC" "parallel_execution"'
    api_latency: 'source:github-actions "API_RESPONSE_TIME" | avg by (operation)'
    
  cloudwatch_insights:
    error_analysis: |
      fields @timestamp, error_type
      | filter @message like /error_type/
      | stats count() by error_type
      | sort count desc
      
  splunk:
    performance_trend: |
      source="github-actions" "PERF_METRIC"
      | rex "PERF_METRIC\|.*\|(?<metric_type>.*)\|(?<value>.*)\|.*"
      | timechart avg(value) by metric_type

# Notification Channels
notifications:
  email:
    smtp_server: "smtp.company.com"
    recipients: ["devops@company.com", "oracle-automation@company.com"]
    
  slack:
    webhook: "https://hooks.slack.com/services/YOUR/WEBHOOK/URL"
    channel: "#oracle-automation"
    
  telegram:
    bot_token: "${TELEGRAM_TOKEN}"
    chat_id: "${TELEGRAM_USER_ID}"
    format: "markdown"

# Custom Dashboard Variables
variables:
  time_range:
    type: "time_range"
    default: "24h"
    options: ["1h", "6h", "24h", "7d", "30d"]
    
  availability_domain:
    type: "multi_select"
    query: 'distinct(availability_domain)'
    all_option: true
    
  error_type:
    type: "multi_select"
    options: ["CAPACITY", "RATE_LIMIT", "AUTH", "NETWORK", "CONFIG", "UNKNOWN"]
    default: ["CAPACITY", "RATE_LIMIT"]

# Export and Backup
export_settings:
  retention_period: "90d"
  backup_frequency: "daily"
  export_formats: ["json", "csv", "prometheus"]
  storage_location: "s3://monitoring-backups/oracle-automation/"