{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "env": {
    "BASH_DEFAULT_TIMEOUT_MS": "60000",
    "BASH_MAX_TIMEOUT_MS": "60000",
    "MAX_MCP_OUTPUT_TOKENS": "150000"
  },
  "includeCoAuthoredBy": true,
  "permissions": {
    "allow": [
      "Bash",
      "Bash(gh:*)",
      "Bash(git:*)",
      "Bash(chmod:*)",
      "Bash(sed:*)",
      "Bash(make:*)",
      "Bash(shellcheck:*)",
      "Bash(actionlint:*)",
      "Bash(shfmt:*)",
      "Bash(npx:*)",
      "Bash(eslint:*)",
      "Bash(djlint:*)",
      "Bash(grep:*)",
      "Bash(yamllint:*)",
      "WebSearch",
      "Read(/tmp/**)",
      "Read(**/IdeaProjects/**)",
      "mcp__zp__Zen__thinkdeep",
      "mcp__zp__Zen__planner",
      "mcp__zp__Zen__analyze",
      "mcp__gh__GitHub__create_pull_request",
      "mcp__gh__GitHub__get_commit",
      "mcp__gh__GitHub__get_job_logs",
      "mcp__gh__GitHub__get_pull_request_files",
      "mcp__gh__GitHub__get_pull_request_reviews",
      "mcp__gh__GitHub__get_pull_request",
      "mcp__gh__GitHub__get_pull_request_status",
      "mcp__gh__GitHub__get_workflow_run_logs",
      "mcp__gh__GitHub__get_pull_request_diff",
      "mcp__gh__GitHub__get_pull_request_comments",
      "mcp__gh__GitHub__list_branches",
      "mcp__gh__GitHub__list_commits",
      "mcp__gh__GitHub__get_workflow_run",
      "mcp__gh__GitHub__list_pull_requests",
      "mcp__gh__GitHub__list_workflow_jobs",
      "mcp__gh__GitHub__list_workflow_runs",
      "mcp__gh__GitHub__list_workflows",
      "mcp__gh__GitHub__merge_pull_request",
      "mcp__gh__GitHub__search_pull_requests",
      "mcp__gh__GitHub__search_repositories",
      "mcp__gh__GitHub__rerun_failed_jobs",
      "mcp__gh__GitHub__rerun_workflow_run",
      "mcp__gh__GitHub__run_workflow",
      "mcp__gh__GitHub__search_code",
      "mcp__gh__GitHub__update_pull_request",
      "mcp__gh__GitHub__update_pull_request_branch"
    ],
    "ask": ["Bash(python:*)", "Bash(python3:*)", "Bash(rm:*)"],
    "deny": ["Bash(pip install:*)", "Bash(pip3 install:*)", "Bash(brew install:*)", "Read(**/.ssh/*)"]
  },
  "model": "claude-sonnet-4-20250514",
  "defaultMode": "plan"
}
